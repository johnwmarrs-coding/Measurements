/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
package measurements

import spock.lang.Specification
import com.google.common.math.DoubleMath;

class AppTest extends Specification {
    // For comparing doubles.
    def epsilon = 0.00000001;
    def "It can calculate the weighted average for unnamed measurements"() {
        setup:
        ArrayList<Measurement> measurements = new ArrayList<Measurement>();

        measurements.add(new Measurement(1, 1))
        measurements.add(new Measurement(2, 2))
        measurements.add(new Measurement(3, 3))

        when:
        double result = App.calculateWeightedAverage(measurements);

        then:
        DoubleMath.fuzzyEquals(result, 14.0/6.0, epsilon)
    }

    def "It can categorically calculate the weighted average for named measurements"() {
        setup:
        ArrayList<Measurement> measurements = new ArrayList<Measurement>();

        measurements.add(new Measurement("category1", 1, 1))
        measurements.add(new Measurement("category2", 2, 2))
        measurements.add(new Measurement("category3", 3, 3))

        when:
        HashMap<String, Double> result = App.calculateGroupWeightedAverage(measurements);

        then:
        DoubleMath.fuzzyEquals(result.get("category1"), 1, epsilon)
        DoubleMath.fuzzyEquals(result.get("category2"), 2, epsilon)
        DoubleMath.fuzzyEquals(result.get("category3"), 3, epsilon)
    }
}
